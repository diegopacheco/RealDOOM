
Thinkercap next/prev needs to be changed.
 next/prev not used outside of thinker cap methods.
 maybe it can be made static (how big?) but it still needs memrefs...
 need to be able to redirect so a double linked list maybe...


Maybe the whole thinker list is an allocation... even though it's a static size?


add thinker cant add a thinker ref. so what does it add?
is each thinker a memref to a thinker?
even tho thinker is a fixed size entry in structs... its pointer is passed in a messy way
 - memref would allow this...


- todo
 - do the dereference pages thing for multi-pages? to not have dual pages

 - replace planar.asm with the other thing?




THINKER PLAN?
 why are we doing z_freeEmsNew (currentthinker-memref) in p_tick.c run thinkers? doesn't make sense!

~change specialdata in sector_t to a memref!

things like sectors are linked to in platforms, etc too...

things with thinkers instead have a thinkerRef?


Thinkers...
 - it wouldnt be a huge array if we went 1k or so..
   - next/prev would be shorts
   - change the func to a char based enum thing? would be much smalle.r..



MEMORY IDEAS

 sector->special from short to char
 thinker-> function to a char 


//
// THINKERS
// All thinkers should be allocated by Z_Malloc
// so they can be operated on uniformly.
// The actual structures will vary in size,
// but the first element must be thinker_t.
//



P_UnArchiveSpecials?  seems fucked. Especially the thinkers, functions....
P_ArchiveSpecials     similarly fucked, how are these even writing...

P_ArchiveThinkers too
P_UnArchiveThinkers too


x 1. Change all thinker function calls to pass in memref instead of pointer?
x 2. Change the functions in thinkers to be the enum? 
x 3. activeceilings
 
 - braintargets[braintargeton]
 - find all uses of P_SpawnMobj
 - intercept_t struct has a pointer
 - P_BlockThingsIterator
    - consider this in a static spot...

1: sector_t mobj_t* thinglist
  - simple change to memref*
2 sectors to sector refs, etc?


sound originRef thing...
 - needs ref, x, y
  ? maybe inner takes x/y and you can pass in null for the degen case



 


 
NOW (fix memory issues)
 - THEN degenmobj_t etc to memref
 - THEN segs, etc to ems
 - THEN all wad lumps to ems

TODO why was there a 0 allocation
TODO vileobj pointer (and test)
TODO test braintargets
? change crossbspnode etc to use indices not addressesma
! next/prev memrefs in those thinglists are bad..
- eventually fix savedata





R_RenderMaskedSegRange
 (from drawsprte)
 (from drawmasked)
  (from)