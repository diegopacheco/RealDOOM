 
 
 
? why was there a 0 allocation (might be e1m1 marker etc?)
 
IMPROVEMENTS
  - mobj in conventional?
  - sectors, lines in conventional?

MEMORY IMPROVEMENTS
 - segs to conventional after all?
 - more shorts to ints in lines etc
 - reuse local variables to create fewer
 - create a 'getter' function that just grabs a value from memory without paging somehow?




... BUGS TO FIX
 - save file stuff (archive, unarchive thinkers)
 - test doom 2 stuff



TODO 
 
 ? is 2048 mem entries enough? plays demo 1 ok.
 - make ems actually work

- get rid of:
  ? more enums
  ? any more net code to dump?
  ? dump bad savegame code
  - see if we can lessen size of some of those sectors etc fields
  


- make titlepic work with > 4 pages?
? remove rangecheck (after doom2 testing?)
- remove disk reading icon (?)

MEMORY IDEAS
 
 - support allocating some things in conventional
 - use overlays, especially on startup code to eliminate space
   - if we ever do multiple renderers or sound code etc, 
        can fit more in the binary by using overlays?
 - go thru all int32_ts and make as many int16_t as possible
 - compress memory allocation entries by using bit masks and combining values
 - reduce visiplanes size below 65k somehow to allow large instead of huge memory model.
   - maybe just reduce the number of visplanes for now...
 - investigate benefits of fewer bigger source files (less far calls?)
 - explicitly declare things near when possible?
 - remove more strings

TESTING:
 - finale  
 - viles and other enemy (heads, head spawns)

? change crossbspnode etc to use indices not addressesma
